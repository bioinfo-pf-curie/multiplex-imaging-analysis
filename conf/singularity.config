import java.io.File;

def checkProfileSingularity(path){
  if (new File(path).exists()){
    File directory = new File(path)
    def contents = []
    directory.eachFileRecurse (groovy.io.FileType.FILES){ file -> contents << file }
    if (!path?.trim() || contents == null || contents.size() == 0){
      println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
      System.exit(-1)
    }
  }else{
    println "   ### ERROR ###    The option '-profile singularity' requires the singularity images to be installed on your system. See `--singularityImagePath` for advanced usage."
    System.exit(-1)
  }
}

singularity {
  enabled = true
  autoMounts = true
  runOptions = (params.geniac.containers?.singularityRunOptions ?: '')
}

process {

  withLabel:fastqc{ container = "${params.geniac.singularityImagePath}/fastqc.sif" }
  withLabel:multiqc{ container = "${params.geniac.singularityImagePath}/multiqc.sif" }
  withLabel:python{ conda = "${params.geniac.tools?.python}" }
  withLabel:mesmer{ container = "vanvalenlab/deepcell-applications:0.4.0" }
  withLabel:cellpose{ container = "biocontainers/cellpose:2.1.1_cv2" }
  withLabel:img_utils{ conda = "${projectDir}/recipes/conda/img_utils.yml" }
  withLabel:pyramidize{ conda = "${projectDir}/recipes/conda/pyramidize.yml" }
  withLabel:quantification{ container = "labsyspharm/quantification:1.5.3" }
}
