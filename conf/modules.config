/*
 * Define modules options
 */


process {

  // Default
  //publishDir = [
  //  path: { "${params.outDir}/${task.process.tokenize(':')[-1].tokenize('_')[0]}" },
  //  mode: 'copy',
  //  saveAs: { filename -> filename.equals('versions.txt') ? null : filename }
  //]

  withName:'splitImage' {
     ext.args = params.overlap ? " --overlap $params.overlap" : ""
     ext.args += params.tileHeight ? " --height $params.tileHeight" : ""
  }

  withName:'pyramidize' {
    publishDir = [
      path: { "${params.outDir}/${tag}/" },
      mode: 'copy',
    ]
  }

  withName:'computeMasks' {
    publishDir = [
      path: { "${params.outDir}/masks/" },
      mode: 'copy',
      pattern: "*_masks.ti{f,ff}"
    ]

    ext.args = params.masksOverlap != null ? " --overlap $params.masksOverlap" : ""
  }

  withName:'stitchFlows' {
    ext.args = params.overlap ? " --overlap $params.overlap" : ""
  }

  withName:'quantification' {
    publishDir = [
      path: { "${params.outDir}/quantification/" },
      mode: 'copy',
      pattern: "*.csv",
      saveAs: { filename -> "${meta.originalName}_data.csv" }
    ]
  }

  withName:'getSoftwareVersions' {
    publishDir = [
      path: { "${params.outDir}/softwareVersions" },
      mode: 'copy'
    ]
  }

  withName:'outputDocumentation' {
    publishDir = [
      path: { "${params.summaryDir}" },
      mode: 'copy'
    ]
  }

  withName:'mergeChannels' {
    publishDir = [
      path: { "${params.summaryDir}" },
      mode: 'copy'
    ]

    ext.args = params.mode ? "--norm $mode" : "" 
  }


}